#!/bin/bash
#
# if 3D is set: 
# given a set of equal geometry grd files describing a 3D scalar in
# cartesian, create a rectilinear vtk file (not projected, grd2vtk projects)
#
# else, just one layer
# 
#
ctrFile=${1-vtkCTR.txt}

name=${1-tmp}			# tmp.1.grd tmp.2.grd ....
dfile=`more $ctrFile | awk -F"=" 'NR==1{print $2}'`		# z_1 < z_2 < ... 

is_3d=`more $ctrFile | awk -F"=" 'NR==2{print $2}'`			# 0: one layer at zlevel
z_level=`more $ctrFile | awk -F"=" 'NR==4{print $2}'`			# project layer to that depth
ascii=`more $ctrFile | awk -F"=" 'NR==5{print $2}'`
extrude=`more $ctrFile | awk -F"=" 'NR==6{print $2}'`			# make exagerrated (by factor extrude) extrusion topography surface of a single layer
zScaling=`more $ctrFile | awk -F"=" 'NR==7{print $2}'`    # Z-coordinate(in km) values are scaled down, to bring it at par with x,y cordinates( in degrees)
regionChange=`more $ctrFile | awk -F"=" 'NR==3{print $2}'`
vtkFileName=""

## Getting Variables ##
startingLineNo=`more vtkCTR.txt | awk '{if($1=="<<")print NR}' | xargs | awk '{print $1+1}'`
endingLineNo=`more vtkCTR.txt | awk '{if($1=="<<")print NR}' | xargs | awk '{print $2-1}'`
vtkFileName="`more $ctrFile | awk -v lno=$startingLineNo 'NR==lno{print $2}'`"

for i in $(seq $((startingLineNo+1)) 1 $endingLineNo);
do
	vtkFileName="${vtkFileName}_`more $ctrFile | awk -v lno=$i 'NR==lno{print $2}'`"
done
vtkFileName="${vtkFileName}vtk.vtk"


### Setting name to be the first variable
name=`more $ctrFile | awk -v lno=$startingLineNo 'NR==lno{print $1"/"$2}'`



if [ $is_3d -eq 1 ];then
    master_file=$name.1
    if [ ! -s $dfile ];then
	echo $0: $dfile for depths not found
	exit
    fi
    nz=`lc $dfile`
    if [ `echo $extrude | gawk '{if($1!=0)print(1);else print(0)}'` -ne 0 ];then
	echo $0: error, extrude $extrude only works for single layer
	exit
    fi
else
    master_file=$name
    nz=1
fi

if [ ! -s $master_file.grd ];then
    echo $0: $master_file.grd not found
    exit
fi


## Determine Region
if [[ -n $regionChange ]];
then
	reg=$regionChange
else
	reg=`grd2reg $master_file.grd`
fi


nx=`grd2nx $master_file.grd $reg`
ny=`grd2ny $master_file.grd $reg`

inc=`grd2inc $master_file.grd 1 $reg`

((n=nx*ny*nz))

echo "# vtk DataFile Version 2.0" > $vtkFileName
echo converted from $name $dfile >> $vtkFileName
if [ $ascii -eq 1 ];then
    echo ASCII >> $vtkFileName
else
    echo BINARY >> $vtkFileName
fi
if [ `echo $extrude | gawk '{if($1!=0)print(1);else print(0)}'` -eq 0 ];then
    echo DATASET RECTILINEAR_GRID >> $vtkFileName 
    echo DIMENSIONS $nx $ny $nz >> $vtkFileName 
    echo X_COORDINATES $nx float >> $vtkFileName
    if [ $ascii -eq 1 ];then
	grd2xyz $master_file.grd $reg | gawk '{print($1)}' | sort -g | uniq | gawk '{printf("%.7e ",$1)}END{printf("\n")}' >> $vtkFileName
    else
	grd2xyz $master_file.grd $reg | gawk '{print($1)}' | sort -g | uniq | gawk '{print($1)}' | asciifloat2bebin >> $vtkFileName
    fi
    

    echo Y_COORDINATES $ny float >> $vtkFileName
    if [ $ascii -eq 1 ];then
	grd2xyz $master_file.grd $reg | gawk '{print($2)}' | sort -g | uniq | gawk '{printf("%.7e ",$1)}END{printf("\n")}' >> $vtkFileName
    else
	grd2xyz $master_file.grd $reg | gawk '{print($2)}' | sort -g | uniq | gawk '{print($1)}' | asciifloat2bebin >> $vtkFileName
    fi
    
    echo Z_COORDINATES $nz float >> $vtkFileName
    if [ $is_3d -eq 1 ];then
	if [ $ascii -eq 1 ];then
	    gawk '{print($1)}' $dfile | gawk -v zsc=$zScaling '{printf("%.7e ",$1/zsc)}END{printf("\n")}' >> $vtkFileName
	else
	    gawk '{print($1)}' $dfile | gawk -v zsc=$zScaling '{print($1/zsc)}' | asciifloat2bebin >> $vtkFileName
	fi
    else
	if [ $ascii -eq 1 ];then
	    echo $z_level | gawk '{printf("%.7e ",$1)}END{printf("\n")}' >> $vtkFileName
	else
	    echo $z_level | gawk '{print($1)}' | asciifloat2bebin >> $vtkFileName
	fi
    fi


 	echo POINT_DATA  $n >> $vtkFileName
	for lno in $(seq $startingLineNo 1 $endingLineNo);
	do
		name=`more $ctrFile | awk -v lno=$lno 'NR==lno{print $1"/"$2}'`
		scalarName=`more $ctrFile | awk -v lno=$lno 'NR==lno{print $2}'`

	
		echo SCALARS $scalarName float 1 >> $vtkFileName
		echo LOOKUP_TABLE default >> $vtkFileName
		
		echo "Writing $scalarName values"
		i=1
		while [ $i -le $nz ];do
			if [ $is_3d -eq 1 ];then
			    file=$name.$i.grd
			else
			    file=$master_file.grd
			fi
			if [ $ascii -eq 1 ];then
			    grd2xyz -ZBLa $file $reg | gawk '{printf("%.7e ",$1);n++;if(n==20){printf("\n");n=0;}}END{printf("\n")}' >> $vtkFileName
			else
			    grd2xyz -ZBLa $file $reg | gawk '{print($1)}' | asciifloat2bebin >> $vtkFileName
			fi
			((i=i+1))
		done
	done
	multiplier=`echo $zScaling | awk '{print 1/$1}'`
	echo "Multiplier for z-axis: $multiplier"
else				# extruded single layer 
    echo DATASET STRUCTURED_GRID
    echo DIMENSIONS $nx $ny $nz
    echo POINTS  $n float
    mean=`grd2mean $master_file.grd`
    grdmath  $master_file.grd $mean SUB = tmp.$$.grd
    if [ $ascii -eq 1 ];then
	grd2xyz tmp.$$.grd | \
	    gawk -v zl=$z_level -v scale=$extrude '{print($1,$2,zl+$3*scale)}' | \
	    gawk '{printf("%.7e %.7e %.7e\n",$1,$2,$3)}END{}'
    else
	grd2xyz tmp.$$.grd | \
	    gawk -v zl=$z_level -v scale=$extrude '{print($1,$2,zl+$3*scale)}' | \
	    asciifloat2bebin 2> /dev/null
    fi
    rm tmp.$$.grd
fi


